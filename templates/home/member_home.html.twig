<section class="user-home">
    <h2>Bienvenue {{ app.user.name }}</h2>
    <p>Voici les activités disponibles pour vous :</p>
    </br></br>


    <section class="activities">
        {# {% if activities is defined %} #}
            <h2>Activités disponibles</h2>
            <table class="activities-table" id="activities-table">
                <thead>
                    <tr>
                        <th><button type="button" class="sort-button styled-header" data-sort="name">Nom</button></th>
                        <th><button type="button" class="sort-button styled-header" data-sort="date">Date</button></th>
                        <th><button type="button" class="sort-button styled-header" data-sort="difficulty">Niveau de Difficulté ⭐</button></th>
                        <th>Horaires</th>
                    </tr>
                </thead>
                <tbody>
                    {% for activity in activities %}
                        <tr>
                            <td>{{ activity.activity_name }}</td>
                            <td>{{ activity.session_date|date('d-m-Y') }}</td>
                            <td>{{ activity.level_label }}</td>
                            <td>{{ activity.session_time }} - {{ activity.session_duration }}</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {# {% else %}
            <p>Aucune activité disponible pour le moment.</p>
        {% endif %} #}
        </br></br>
        <button type="button" class="BoutonInscrire" id="register-button">S'inscrire</button>
        </br></br></br>
    </section>
</section>

<div id="info-box" class="info-box">
    <h3>Informations transmises :</h3>
    <pre id="info-content">Aucune sélection pour le moment.</pre>
</div>

<script>
document.getElementById('register-button').addEventListener('click', function () {
    const activities = [];

    // Parcours de toutes les lignes du tableau pour récupérer les horaires sélectionnés
    const rows = document.querySelectorAll('#activities-table tbody tr');

    rows.forEach(function(row) {
        const activityName = row.cells[0].textContent.trim(); // Nom de l'activité
        const timeCheckboxes = row.querySelectorAll(`input[name="${activityName}"]:checked`); // Horaires sélectionnés
        const activityTimes = [];

        timeCheckboxes.forEach(function(timeCheckbox) {
            activityTimes.push(timeCheckbox.value);
        });

        // Si des horaires sont sélectionnés pour cette activité
        if (activityTimes.length > 0) {
            activities.push({
                name: activityName,
                times: activityTimes
            });
        }
    });

    // Mise à jour de la boîte d'informations
    const infoContent = document.getElementById('info-content');
    if (activities.length > 0) {
        let infoText = '';
        activities.forEach(function (activity) {
            infoText += `${activity.name}: ${activity.times.join(', ')}\n`;
        });
        infoContent.textContent = infoText;
    } else {
        infoContent.textContent = 'Aucune sélection pour le moment.';
    }
});

// Tri du tableau
document.querySelectorAll('.sort-button').forEach(button => {
    button.addEventListener('click', function () {
        const table = document.getElementById('activities-table');
        const rows = Array.from(table.querySelectorAll('tbody tr'));
        const sortType = this.dataset.sort;

        rows.sort((a, b) => {
            let valA, valB;

            if (sortType === 'name') {
                valA = a.cells[0].textContent.trim().toLowerCase();
                valB = b.cells[0].textContent.trim().toLowerCase();
                return valA.localeCompare(valB);
            } else if (sortType === 'date') {
                valA = new Date(a.cells[1].textContent.trim());
                valB = new Date(b.cells[1].textContent.trim());
                return valB - valA; // Tri par date descendante
            } else if (sortType === 'difficulty') {
                valA = a.cells[2].textContent.trim().length; // Compte les étoiles
                valB = b.cells[2].textContent.trim().length;
                return valB - valA; // Tri par difficulté descendante
            }
        });

        // Réorganiser les lignes dans le tableau
        const tbody = table.querySelector('tbody');
        tbody.innerHTML = '';
        rows.forEach(row => tbody.appendChild(row));
    });
});
</script>
